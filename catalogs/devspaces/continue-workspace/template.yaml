apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: continue-workspace
  title: Create a User-Scoped AI-Enabled DevWorkspace
  description: |
    Deploys a development workspace from Developer Hub with a self-hosted AI model on Red Hat OpenShift AI for code generation.
  tags:
    - gitlab
    - devspaces
    - automation
    - devops
    - poc-examples
    - self-service
    - AI
    - code-generation

spec:
  owner: devops-team
  system: self-service
  type: Service
  parameters:

    - title: Deploy a Continue Workspace
      required:
        - rootSelfServiceRepo
        - projectEntity
      properties:
        rootSelfServiceRepo:
          title: Root Self-Service Repository
          type: string
          description: The root self-service repository that contains artifact deployment configurations.
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              - kind: Component
                spec.type: self-service
        projectEntity:
          title: Project Name
          type: string
          description: The project where the Continue Workspace is integrated.
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              - kind: Component
                spec.type: data-science-project

  steps:

    ###########################
    ## Template the Application
    ###########################
    - id: applicationTemplate
      name: Template Helm Application
      action: fetch:template
      input:
        url: "../../../../skeletons/applications/helm/" ### TODO: replace this reference with an AppSet
        targetPath: "projects/${{ parameters.projectEntity | parseEntityRef | pick('name') }}/"
        values:
          repoName: "$${{ parameters.projectEntity | parseEntityRef | pick('name') }}-workspace"
          namespace: "openshift-gitops"
          syncWave: "-1"
          chart:
            name: "devspace-workspace"
            chartUrl: "https://poc-examples.github.io/supporting-charts"
            chartVersion: "0.1.0"
          projectName: "self-service"
          automated:
            prune: false
            selfHeal: true
          createNamespace: "false"
          valuesObject: |
            project: ${{ parameters.projectEntity | parseEntityRef | pick('name') }}

    ##############
    ## Rename File
    ##############
    - id: changeTemplateName
      name: Change Template Name
      action: fs:rename
      input:
        files:
          - from: "projects/${{ parameters.projectEntity | parseEntityRef | pick('name') }}/application.yaml" ### TODO: replace this reference with an AppSet
            to: "projects/${{ parameters.projectEntity | parseEntityRef | pick('name') }}/${{ parameters.projectEntity | parseEntityRef | pick('name') }}-workspace.yaml"

    ##########################
    ## Push Repository Changes
    ##########################
    - id: publishManifests
      name: Publishing to the Source Code Repository
      action: gitlab:repo:push
      input:
        description: |
          Publishing Continue Workspace to the source code repository
        repoUrl: gitlab.com?owner=${{ parameters.gitlabOwner }}&repo=${{ parameters.gitlabRepository }}
        sourcePath: "./projects/${{ parameters.projectEntity | parseEntityRef | pick('name') }}"
        targetPath: "./projects/${{ parameters.projectEntity | parseEntityRef | pick('name') }}"
        branchName: ${{ parameters.gitlabBranch }}
        commitAction: create
        commitMessage: "Created Continue Workspace in project ${{ parameters.projectEntity | parseEntityRef | pick('name') }}"

  output:
    links:
      - title: GitLab Repository
        url: ${{ steps['fetchSelfServiceEntity'].output.entity.spec.gitlab.remoteUrl }}
