apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: data-science-project
  title: Red Hat OpenShift AI - Data Science Project
  description: |
    This template automates the setup of a Red Hat OpenShift AI Data Science Project. It provides 
    a unified project for integrating rhoai resources. The template helps teams easily 
    configure datascience projects, ensuring that all resources are consistently are merged 
    together under a unified project.
  tags:
    - openshift-ai
    - data-science-project
    - automation
    - data-science
    - data-pipelines
    - gitlab
    - argocd

spec:
  owner: data-science
  system: self-service
  type: DataScience-Project
  parameters:
    - title: DataScience Project Settings
      ui:group: data-science-project
      required:
        - rootSelfServiceRepo
        - projectName
      properties:
        rootSelfServiceRepo:
          title: Root Self-Service Repository
          type: string
          description: The root self-service repository that contains artifact deployment configurations.
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              - kind: Component
                spec.type: self-service
        projectName:
          title: Project Name
          description: The project where the data connector is integrated.
          type: string
          pattern: "^[a-z][a-z0-9-]+$"
          minLength: 3
          maxLength: 30

  steps:

    #################
    ## Fetch Entities
    #################

    - action: catalog:fetch
      id: fetchSelfServiceEntity
      name: Fetch Root Self-Service Repo Entity
      input:
        entityRef: ${{ parameters.rootSelfServiceRepo }}

    ###########################
    ## Template the Application
    ###########################
    - id: applicationTemplate
      name: Template Helm Application
      action: fetch:template
      input:
        url: "../../../../skeletons/applications/helm/"
        targetPath: "projects/${{ parameters.projectName }}/"
        values:
          repoName: "${{ parameters.projectName }}-ds-project"
          namespace: "openshift-gitops"
          labels:
            project: ${{ parameters.projectName }}
          syncWave: "-1"
          chart:
            name: "data-science-project"
            chartUrl: "https://poc-examples.github.io/supporting-charts"
            chartVersion: "0.1.3"
          projectName: "self-service"
          automated:
            prune: true
            selfHeal: true
          createNamespace: "false"
          valuesObject: |
            project: ${{ parameters.projectName }}
        
    - id: templateProjectEntity
      name: Template Project Entity
      action: fetch:template
      input:
        url: "../../../../skeletons/backstage/data-science-project"
        targetPath: "backstage/${{ parameters.projectName }}/"
        values:
          name: ${{ parameters.projectName }}
          owner: user:${{ user.entity.metadata.namespace}}/${{ user.entity.metadata.name }}
          dependsOn: ${{ parameters.rootSelfServiceRepo }}

    ##############
    ## Rename File
    ##############
    - id: changeProjectTemplateName
      name: Change Project Template Name
      action: fs:rename
      input:
        files:
          - from: "projects/${{ parameters.projectName }}/application.yaml"
            to: "projects/${{ parameters.projectName }}/${{ parameters.projectName }}-ds-project.yaml"

    - id: changeBackstageTemplateName
      name: Change Backstage Template Name
      action: fs:rename
      input:
        files:
          - from: "backstage/${{ parameters.projectName }}/data-science-project.yaml"
            to: "backstage/${{ parameters.projectName }}/${{ parameters.projectName }}-ds-project.yaml"

    ##########################
    ## Push Repository Changes
    ##########################
    - id: publishManifests
      name: Publishing to the Source Code Repository
      action: gitlab:repo:push
      input:
        allowedHosts:
          - ${{ steps['fetchSelfServiceEntity'].output.entity.spec.gitlab.instance }}
        description: |
          placeholder
        repoUrl: ${{ steps['fetchSelfServiceEntity'].output.entity.spec.gitlab.instance }}?owner=${{ steps['fetchSelfServiceEntity'].output.entity.spec.gitlab.owner }}&repo=${{ steps['fetchSelfServiceEntity'].output.entity.spec.gitlab.repository }}
        branchName: ${{ steps['fetchSelfServiceEntity'].output.entity.spec.gitlab.branch }}
        commitAction: create
        commitMessage: "Created ${{ parameters.projectName }} Data Science Project"

    ########################
    ## Register Catalog Info
    ########################
    - id: registerCatalog
      name: "Register Catalog Info"
      action: catalog:register
      input:
        repoContentsUrl: https://${{ steps['fetchSelfServiceEntity'].output.entity.spec.gitlab.instance }}/${{ steps["publishManifests"].output.projectPath }}
        catalogInfoPath: /-/blob/${{ steps['fetchSelfServiceEntity'].output.entity.spec.gitlab.branch }}/backstage/${{ parameters.projectName }}/${{ parameters.projectName }}-ds-project.yaml

  output:
    links:
      - title: GitOps Application
        url: https://${{ steps['fetchSelfServiceEntity'].output.entity.spec.argocd.url }}/applications/openshift-gitops/root-self-service
      - title: GitLab Repository
        url: https://${{ steps['fetchSelfServiceEntity'].output.entity.spec.gitlab.instance }}/${{ steps['publishManifests'].output.projectPath }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['registerCatalog'].output.entityRef }}
